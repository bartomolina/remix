{
	"id": "c580b3dca5b9d79106e744fe28044a98",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"test.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// 0x7604f88dB852329FA0FcBE17D71C844105c83686\npragma solidity ^0.8.7;\n\ncontract Test {\n\n    address nftContract = 0x7604f88dB852329FA0FcBE17D71C844105c83686;\n    uint tokenId = 0;\n    uint price = 100;\n\n    struct ListedToken {\n        address payable seller;\n        uint256 price;\n    }\n\n    mapping(address => mapping(uint256 => ListedToken) ) private contractToToken;\n\n    constructor() {}\n\n    function addListing() public {\n        ListedToken memory token = ListedToken(\n            payable(nftContract),\n            price\n        );\n\n        contractToToken[nftContract][tokenId] = token;\n        tokenId++;\n    }\n\n    function deleteListing() public {\n        delete contractToToken[nftContract][0];\n    }\n\n    function test() public view returns (ListedToken memory) {\n        return contractToToken[nftContract][0];\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"test.sol": {
				"Test": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "addListing",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deleteListing",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "test",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address payable",
											"name": "seller",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										}
									],
									"internalType": "struct Test.ListedToken",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"test.sol\":103:866  contract Test {... */\n  mstore(0x40, 0x80)\n    /* \"test.sol\":146:188  0x7604f88dB852329FA0FcBE17D71C844105c83686 */\n  0x7604f88db852329fa0fcbe17d71c844105c83686\n    /* \"test.sol\":124:188  address nftContract = 0x7604f88dB852329FA0FcBE17D71C844105c83686 */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"test.sol\":209:210  0 */\n  0x00\n    /* \"test.sol\":194:210  uint tokenId = 0 */\n  0x01\n  sstore\n    /* \"test.sol\":229:232  100 */\n  0x64\n    /* \"test.sol\":216:232  uint price = 100 */\n  0x02\n  sstore\n    /* \"test.sol\":409:425  constructor() {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"test.sol\":103:866  contract Test {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"test.sol\":103:866  contract Test {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x45995bdd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x5a4ed037\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf8a8fd6d\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"test.sol\":659:746  function deleteListing() public {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"test.sol\":431:653  function addListing() public {... */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"test.sol\":752:864  function test() public view returns (ListedToken memory) {... */\n    tag_5:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"test.sol\":659:746  function deleteListing() public {... */\n    tag_7:\n        /* \"test.sol\":708:723  contractToToken */\n      0x03\n        /* \"test.sol\":708:736  contractToToken[nftContract] */\n      0x00\n        /* \"test.sol\":724:735  nftContract */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test.sol\":708:736  contractToToken[nftContract] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"test.sol\":708:739  contractToToken[nftContract][0] */\n      0x00\n        /* \"test.sol\":737:738  0 */\n      dup1\n        /* \"test.sol\":708:739  contractToToken[nftContract][0] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"test.sol\":701:739  delete contractToToken[nftContract][0] */\n      dup1\n      dup3\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      pop\n      pop\n        /* \"test.sol\":659:746  function deleteListing() public {... */\n      jump\t// out\n        /* \"test.sol\":431:653  function addListing() public {... */\n    tag_9:\n        /* \"test.sol\":470:494  ListedToken memory token */\n      0x00\n        /* \"test.sol\":497:571  ListedToken(... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"test.sol\":530:541  nftContract */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test.sol\":497:571  ListedToken(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"test.sol\":556:561  price */\n      sload(0x02)\n        /* \"test.sol\":497:571  ListedToken(... */\n      dup2\n      mstore\n      pop\n        /* \"test.sol\":470:571  ListedToken memory token = ListedToken(... */\n      swap1\n      pop\n        /* \"test.sol\":622:627  token */\n      dup1\n        /* \"test.sol\":582:597  contractToToken */\n      0x03\n        /* \"test.sol\":582:610  contractToToken[nftContract] */\n      0x00\n        /* \"test.sol\":598:609  nftContract */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test.sol\":582:610  contractToToken[nftContract] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"test.sol\":582:619  contractToToken[nftContract][tokenId] */\n      0x00\n        /* \"test.sol\":611:618  tokenId */\n      sload(0x01)\n        /* \"test.sol\":582:619  contractToToken[nftContract][tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"test.sol\":582:627  contractToToken[nftContract][tokenId] = token */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"test.sol\":637:644  tokenId */\n      0x01\n      0x00\n        /* \"test.sol\":637:646  tokenId++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_16\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"test.sol\":460:653  {... */\n      pop\n        /* \"test.sol\":431:653  function addListing() public {... */\n      jump\t// out\n        /* \"test.sol\":752:864  function test() public view returns (ListedToken memory) {... */\n    tag_11:\n        /* \"test.sol\":789:807  ListedToken memory */\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n        /* \"test.sol\":826:841  contractToToken */\n      0x03\n        /* \"test.sol\":826:854  contractToToken[nftContract] */\n      0x00\n        /* \"test.sol\":842:853  nftContract */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test.sol\":826:854  contractToToken[nftContract] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"test.sol\":826:857  contractToToken[nftContract][0] */\n      0x00\n        /* \"test.sol\":855:856  0 */\n      dup1\n        /* \"test.sol\":826:857  contractToToken[nftContract][0] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"test.sol\":819:857  return contractToToken[nftContract][0] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"test.sol\":752:864  function test() public view returns (ListedToken memory) {... */\n      swap1\n      jump\t// out\n    tag_19:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:139   */\n    tag_22:\n        /* \"#utility.yul\":100:132   */\n      tag_24\n        /* \"#utility.yul\":126:131   */\n      dup2\n        /* \"#utility.yul\":100:132   */\n      tag_25\n      jump\t// in\n    tag_24:\n        /* \"#utility.yul\":95:98   */\n      dup3\n        /* \"#utility.yul\":88:133   */\n      mstore\n        /* \"#utility.yul\":7:139   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":203:733   */\n    tag_26:\n        /* \"#utility.yul\":354:358   */\n      0x40\n        /* \"#utility.yul\":349:352   */\n      dup3\n        /* \"#utility.yul\":345:359   */\n      add\n        /* \"#utility.yul\":443:447   */\n      0x00\n        /* \"#utility.yul\":436:441   */\n      dup3\n        /* \"#utility.yul\":432:448   */\n      add\n        /* \"#utility.yul\":426:449   */\n      mload\n        /* \"#utility.yul\":462:541   */\n      tag_28\n        /* \"#utility.yul\":535:539   */\n      0x00\n        /* \"#utility.yul\":530:533   */\n      dup6\n        /* \"#utility.yul\":526:540   */\n      add\n        /* \"#utility.yul\":512:524   */\n      dup3\n        /* \"#utility.yul\":462:541   */\n      tag_22\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":369:551   */\n      pop\n        /* \"#utility.yul\":634:638   */\n      0x20\n        /* \"#utility.yul\":627:632   */\n      dup3\n        /* \"#utility.yul\":623:639   */\n      add\n        /* \"#utility.yul\":617:640   */\n      mload\n        /* \"#utility.yul\":653:716   */\n      tag_29\n        /* \"#utility.yul\":710:714   */\n      0x20\n        /* \"#utility.yul\":705:708   */\n      dup6\n        /* \"#utility.yul\":701:715   */\n      add\n        /* \"#utility.yul\":687:699   */\n      dup3\n        /* \"#utility.yul\":653:716   */\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":561:726   */\n      pop\n        /* \"#utility.yul\":323:733   */\n      pop\n        /* \"#utility.yul\":203:733   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":739:847   */\n    tag_30:\n        /* \"#utility.yul\":816:840   */\n      tag_32\n        /* \"#utility.yul\":834:839   */\n      dup2\n        /* \"#utility.yul\":816:840   */\n      tag_33\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":811:814   */\n      dup3\n        /* \"#utility.yul\":804:841   */\n      mstore\n        /* \"#utility.yul\":739:847   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":853:1183   */\n    tag_13:\n        /* \"#utility.yul\":1000:1004   */\n      0x00\n        /* \"#utility.yul\":1038:1040   */\n      0x40\n        /* \"#utility.yul\":1027:1036   */\n      dup3\n        /* \"#utility.yul\":1023:1041   */\n      add\n        /* \"#utility.yul\":1015:1041   */\n      swap1\n      pop\n        /* \"#utility.yul\":1051:1176   */\n      tag_35\n        /* \"#utility.yul\":1173:1174   */\n      0x00\n        /* \"#utility.yul\":1162:1171   */\n      dup4\n        /* \"#utility.yul\":1158:1175   */\n      add\n        /* \"#utility.yul\":1149:1155   */\n      dup5\n        /* \"#utility.yul\":1051:1176   */\n      tag_26\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":853:1183   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1189:1293   */\n    tag_25:\n        /* \"#utility.yul\":1234:1241   */\n      0x00\n        /* \"#utility.yul\":1263:1287   */\n      tag_37\n        /* \"#utility.yul\":1281:1286   */\n      dup3\n        /* \"#utility.yul\":1263:1287   */\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":1252:1287   */\n      swap1\n      pop\n        /* \"#utility.yul\":1189:1293   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1299:1425   */\n    tag_38:\n        /* \"#utility.yul\":1336:1343   */\n      0x00\n        /* \"#utility.yul\":1376:1418   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1369:1374   */\n      dup3\n        /* \"#utility.yul\":1365:1419   */\n      and\n        /* \"#utility.yul\":1354:1419   */\n      swap1\n      pop\n        /* \"#utility.yul\":1299:1425   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1431:1508   */\n    tag_33:\n        /* \"#utility.yul\":1468:1475   */\n      0x00\n        /* \"#utility.yul\":1497:1502   */\n      dup2\n        /* \"#utility.yul\":1486:1502   */\n      swap1\n      pop\n        /* \"#utility.yul\":1431:1508   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1514:1747   */\n    tag_17:\n        /* \"#utility.yul\":1553:1556   */\n      0x00\n        /* \"#utility.yul\":1576:1600   */\n      tag_42\n        /* \"#utility.yul\":1594:1599   */\n      dup3\n        /* \"#utility.yul\":1576:1600   */\n      tag_33\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":1567:1600   */\n      swap2\n      pop\n        /* \"#utility.yul\":1622:1688   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1615:1620   */\n      dup3\n        /* \"#utility.yul\":1612:1689   */\n      eq\n        /* \"#utility.yul\":1609:1712   */\n      iszero\n      tag_43\n      jumpi\n        /* \"#utility.yul\":1692:1710   */\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":1609:1712   */\n    tag_43:\n        /* \"#utility.yul\":1739:1740   */\n      0x01\n        /* \"#utility.yul\":1732:1737   */\n      dup3\n        /* \"#utility.yul\":1728:1741   */\n      add\n        /* \"#utility.yul\":1721:1741   */\n      swap1\n      pop\n        /* \"#utility.yul\":1514:1747   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1753:1933   */\n    tag_45:\n        /* \"#utility.yul\":1801:1878   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1798:1799   */\n      0x00\n        /* \"#utility.yul\":1791:1879   */\n      mstore\n        /* \"#utility.yul\":1898:1902   */\n      0x11\n        /* \"#utility.yul\":1895:1896   */\n      0x04\n        /* \"#utility.yul\":1888:1903   */\n      mstore\n        /* \"#utility.yul\":1922:1926   */\n      0x24\n        /* \"#utility.yul\":1919:1920   */\n      0x00\n        /* \"#utility.yul\":1912:1927   */\n      revert\n\n    auxdata: 0xa26469706673582212200b79621ef3c333b3ebf90a5cb19adf4542f0c93f219b9fc2a15a7b4602804c6164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_26": {
									"entryPoint": null,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052737604f88db852329fa0fcbe17d71c844105c836866000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600155606460025534801561006e57600080fd5b506104bc8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806345995bdd146100465780635a4ed03714610050578063f8a8fd6d1461005a575b600080fd5b61004e610078565b005b61005861011d565b005b610062610251565b60405161006f91906103b7565b60405180910390f35b600360008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000808152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090555050565b6000604051806040016040528060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600254815250905080600360008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600154815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155905050600160008154809291906102499061040e565b919050555050565b61025961033a565b600360008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008081526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481525050905090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b610373816103d2565b82525050565b60408201600082015161038f600085018261036a565b5060208201516103a260208501826103a8565b50505050565b6103b181610404565b82525050565b60006040820190506103cc6000830184610379565b92915050565b60006103dd826103e4565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061041982610404565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561044c5761044b610457565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212200b79621ef3c333b3ebf90a5cb19adf4542f0c93f219b9fc2a15a7b4602804c6164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0x7604F88DB852329FA0FCBE17D71C844105C83686 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 SSTORE PUSH1 0x64 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BC DUP1 PUSH2 0x7E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x45995BDD EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x5A4ED037 EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF8A8FD6D EQ PUSH2 0x5A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x78 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x11D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x62 PUSH2 0x251 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F SWAP2 SWAP1 PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 SLOAD DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x249 SWAP1 PUSH2 0x40E JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST PUSH2 0x259 PUSH2 0x33A JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x373 DUP2 PUSH2 0x3D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x38F PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x36A JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3A2 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3A8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3B1 DUP2 PUSH2 0x404 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3CC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x379 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DD DUP3 PUSH2 0x3E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x419 DUP3 PUSH2 0x404 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x44C JUMPI PUSH2 0x44B PUSH2 0x457 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND PUSH26 0x621EF3C333B3EBF90A5CB19ADF4542F0C93F219B9FC2A15A7B46 MUL DUP1 0x4C PUSH2 0x6473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "103:763:0:-:0;;;146:42;124:64;;;;;;;;;;;;;;;;;;;;209:1;194:16;;229:3;216:16;;409;;;;;;;;;;103:763;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@addListing_52": {
									"entryPoint": 285,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deleteListing_63": {
									"entryPoint": 120,
									"id": 63,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@test_76": {
									"entryPoint": 593,
									"id": 76,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_payable": {
									"entryPoint": 874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_ListedToken_$15_memory_ptr_to_t_struct$_ListedToken_$15_memory_ptr_fromStack": {
									"entryPoint": 889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_struct$_ListedToken_$15_memory_ptr__to_t_struct$_ListedToken_$15_memory_ptr__fromStack_reversed": {
									"entryPoint": 951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 978,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 996,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1028,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 1038,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1111,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1936:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:61:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "95:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "126:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "100:25:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "100:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "88:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "88:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "88:45:1"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "66:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "73:3:1",
														"type": ""
													}
												],
												"src": "7:132:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "323:410:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "333:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "349:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "354:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "345:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "345:14:1"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "337:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "369:182:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "406:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "436:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "443:4:1",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "426:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "426:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "410:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "512:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "530:3:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "535:4:1",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "526:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "526:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_payable_to_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "462:49:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "462:79:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "462:79:1"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "561:165:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "597:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "627:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "634:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "623:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "623:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "617:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "617:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "601:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "687:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "705:3:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "710:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "701:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "701:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "653:33:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "653:63:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "653:63:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ListedToken_$15_memory_ptr_to_t_struct$_ListedToken_$15_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "310:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "317:3:1",
														"type": ""
													}
												],
												"src": "203:530:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "794:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "811:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "834:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "816:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "816:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "804:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "804:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "804:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "782:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "789:3:1",
														"type": ""
													}
												],
												"src": "739:108:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1005:178:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1015:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1027:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1038:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1023:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1023:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1015:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1149:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1162:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1173:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1158:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1158:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ListedToken_$15_memory_ptr_to_t_struct$_ListedToken_$15_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1051:97:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1051:125:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1051:125:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ListedToken_$15_memory_ptr__to_t_struct$_ListedToken_$15_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "977:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "989:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1000:4:1",
														"type": ""
													}
												],
												"src": "853:330:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1242:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1252:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1281:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1263:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1263:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1252:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1224:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1234:7:1",
														"type": ""
													}
												],
												"src": "1189:104:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1344:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1354:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1369:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1376:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1365:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1365:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1354:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1326:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1336:7:1",
														"type": ""
													}
												],
												"src": "1299:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1476:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1486:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1497:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1486:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1458:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1468:7:1",
														"type": ""
													}
												],
												"src": "1431:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1557:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1567:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1594:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1576:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1576:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1567:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1690:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1692:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1692:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1692:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1615:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1622:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1612:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:77:1"
															},
															"nodeType": "YulIf",
															"src": "1609:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1721:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1732:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1739:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1728:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1728:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1721:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1543:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1553:3:1",
														"type": ""
													}
												],
												"src": "1514:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1781:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1798:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1801:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1791:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1791:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1791:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1895:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1898:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1888:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1888:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1888:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1919:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1922:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1912:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1912:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1912:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1753:180:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_address_payable_to_t_address_payable(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    // struct Test.ListedToken -> struct Test.ListedToken\n    function abi_encode_t_struct$_ListedToken_$15_memory_ptr_to_t_struct$_ListedToken_$15_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // seller\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_payable_to_t_address_payable(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // price\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_struct$_ListedToken_$15_memory_ptr__to_t_struct$_ListedToken_$15_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_struct$_ListedToken_$15_memory_ptr_to_t_struct$_ListedToken_$15_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806345995bdd146100465780635a4ed03714610050578063f8a8fd6d1461005a575b600080fd5b61004e610078565b005b61005861011d565b005b610062610251565b60405161006f91906103b7565b60405180910390f35b600360008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000808152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090555050565b6000604051806040016040528060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600254815250905080600360008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600154815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155905050600160008154809291906102499061040e565b919050555050565b61025961033a565b600360008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008081526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481525050905090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b610373816103d2565b82525050565b60408201600082015161038f600085018261036a565b5060208201516103a260208501826103a8565b50505050565b6103b181610404565b82525050565b60006040820190506103cc6000830184610379565b92915050565b60006103dd826103e4565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061041982610404565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561044c5761044b610457565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212200b79621ef3c333b3ebf90a5cb19adf4542f0c93f219b9fc2a15a7b4602804c6164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x45995BDD EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x5A4ED037 EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF8A8FD6D EQ PUSH2 0x5A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x78 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x11D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x62 PUSH2 0x251 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F SWAP2 SWAP1 PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 SLOAD DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x249 SWAP1 PUSH2 0x40E JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST PUSH2 0x259 PUSH2 0x33A JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x373 DUP2 PUSH2 0x3D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x38F PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x36A JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3A2 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3A8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3B1 DUP2 PUSH2 0x404 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3CC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x379 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DD DUP3 PUSH2 0x3E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x419 DUP3 PUSH2 0x404 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x44C JUMPI PUSH2 0x44B PUSH2 0x457 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND PUSH26 0x621EF3C333B3EBF90A5CB19ADF4542F0C93F219B9FC2A15A7B46 MUL DUP1 0x4C PUSH2 0x6473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "103:763:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;659:87;;;:::i;:::-;;431:222;;;:::i;:::-;;752:112;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;659:87;708:15;:28;724:11;;;;;;;;;;;708:28;;;;;;;;;;;;;;;:31;737:1;708:31;;;;;;;;;;;;701:38;;;;;;;;;;;;;;;;;;;;;;;659:87::o;431:222::-;470:24;497:74;;;;;;;;530:11;;;;;;;;;;497:74;;;;;;556:5;;497:74;;;470:101;;622:5;582:15;:28;598:11;;;;;;;;;;;582:28;;;;;;;;;;;;;;;:37;611:7;;582:37;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;637:7;;:9;;;;;;;;;:::i;:::-;;;;;;460:193;431:222::o;752:112::-;789:18;;:::i;:::-;826:15;:28;842:11;;;;;;;;;;;826:28;;;;;;;;;;;;;;;:31;855:1;826:31;;;;;;;;;;;819:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;752:112;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::o;7:132:1:-;100:32;126:5;100:32;:::i;:::-;95:3;88:45;7:132;;:::o;203:530::-;354:4;349:3;345:14;443:4;436:5;432:16;426:23;462:79;535:4;530:3;526:14;512:12;462:79;:::i;:::-;369:182;634:4;627:5;623:16;617:23;653:63;710:4;705:3;701:14;687:12;653:63;:::i;:::-;561:165;323:410;203:530;;:::o;739:108::-;816:24;834:5;816:24;:::i;:::-;811:3;804:37;739:108;;:::o;853:330::-;1000:4;1038:2;1027:9;1023:18;1015:26;;1051:125;1173:1;1162:9;1158:17;1149:6;1051:125;:::i;:::-;853:330;;;;:::o;1189:104::-;1234:7;1263:24;1281:5;1263:24;:::i;:::-;1252:35;;1189:104;;;:::o;1299:126::-;1336:7;1376:42;1369:5;1365:54;1354:65;;1299:126;;;:::o;1431:77::-;1468:7;1497:5;1486:16;;1431:77;;;:::o;1514:233::-;1553:3;1576:24;1594:5;1576:24;:::i;:::-;1567:33;;1622:66;1615:5;1612:77;1609:103;;;1692:18;;:::i;:::-;1609:103;1739:1;1732:5;1728:13;1721:20;;1514:233;;;:::o;1753:180::-;1801:77;1798:1;1791:88;1898:4;1895:1;1888:15;1922:4;1919:1;1912:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "242400",
								"executionCost": "51660",
								"totalCost": "294060"
							},
							"external": {
								"addListing()": "79632",
								"deleteListing()": "31699",
								"test()": "7293"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 103,
									"end": 866,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 103,
									"end": 866,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 103,
									"end": 866,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 146,
									"end": 188,
									"name": "PUSH",
									"source": 0,
									"value": "7604F88DB852329FA0FCBE17D71C844105C83686"
								},
								{
									"begin": 124,
									"end": 188,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 124,
									"end": 188,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 124,
									"end": 188,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 124,
									"end": 188,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 124,
									"end": 188,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 124,
									"end": 188,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 124,
									"end": 188,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 124,
									"end": 188,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 124,
									"end": 188,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 124,
									"end": 188,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 124,
									"end": 188,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 124,
									"end": 188,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 124,
									"end": 188,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 124,
									"end": 188,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 124,
									"end": 188,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 124,
									"end": 188,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 124,
									"end": 188,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 124,
									"end": 188,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 124,
									"end": 188,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 124,
									"end": 188,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 209,
									"end": 210,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 210,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 210,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 229,
									"end": 232,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 216,
									"end": 232,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 216,
									"end": 232,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 409,
									"end": 425,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 409,
									"end": 425,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 409,
									"end": 425,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 409,
									"end": 425,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 409,
									"end": 425,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 409,
									"end": 425,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 409,
									"end": 425,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 409,
									"end": 425,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 409,
									"end": 425,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 409,
									"end": 425,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 409,
									"end": 425,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 103,
									"end": 866,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 103,
									"end": 866,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 103,
									"end": 866,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 103,
									"end": 866,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 103,
									"end": 866,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 103,
									"end": 866,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 103,
									"end": 866,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200b79621ef3c333b3ebf90a5cb19adf4542f0c93f219b9fc2a15a7b4602804c6164736f6c63430008070033",
									".code": [
										{
											"begin": 103,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 103,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 103,
											"end": 866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 103,
											"end": 866,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 103,
											"end": 866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 103,
											"end": 866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 103,
											"end": 866,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 103,
											"end": 866,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 103,
											"end": 866,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 103,
											"end": 866,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "45995BDD"
										},
										{
											"begin": 103,
											"end": 866,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 103,
											"end": 866,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "5A4ED037"
										},
										{
											"begin": 103,
											"end": 866,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 103,
											"end": 866,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "F8A8FD6D"
										},
										{
											"begin": 103,
											"end": 866,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 103,
											"end": 866,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 103,
											"end": 866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 103,
											"end": 866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 659,
											"end": 746,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 659,
											"end": 746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 659,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 659,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 659,
											"end": 746,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 659,
											"end": 746,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 659,
											"end": 746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 659,
											"end": 746,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 431,
											"end": 653,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 431,
											"end": 653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 431,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 431,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 431,
											"end": 653,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 431,
											"end": 653,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 431,
											"end": 653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 431,
											"end": 653,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 752,
											"end": 864,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 752,
											"end": 864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 752,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 752,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 752,
											"end": 864,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 752,
											"end": 864,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 752,
											"end": 864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 752,
											"end": 864,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 752,
											"end": 864,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 752,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 752,
											"end": 864,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 752,
											"end": 864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 752,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 752,
											"end": 864,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 752,
											"end": 864,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 752,
											"end": 864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 752,
											"end": 864,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 752,
											"end": 864,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 752,
											"end": 864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 752,
											"end": 864,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 752,
											"end": 864,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 752,
											"end": 864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 752,
											"end": 864,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 659,
											"end": 746,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 659,
											"end": 746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 708,
											"end": 723,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 708,
											"end": 736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 724,
											"end": 735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 724,
											"end": 735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 724,
											"end": 735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 724,
											"end": 735,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 724,
											"end": 735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 724,
											"end": 735,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 724,
											"end": 735,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 724,
											"end": 735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 724,
											"end": 735,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 724,
											"end": 735,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 724,
											"end": 735,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 708,
											"end": 736,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 708,
											"end": 736,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 708,
											"end": 736,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 708,
											"end": 736,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 708,
											"end": 736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 708,
											"end": 736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 708,
											"end": 736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 708,
											"end": 736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 708,
											"end": 736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 708,
											"end": 736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 708,
											"end": 736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 708,
											"end": 736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 708,
											"end": 736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 708,
											"end": 736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 736,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 708,
											"end": 739,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 737,
											"end": 738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 708,
											"end": 739,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 708,
											"end": 739,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 708,
											"end": 739,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 708,
											"end": 739,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 708,
											"end": 739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 708,
											"end": 739,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 708,
											"end": 739,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 708,
											"end": 739,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 708,
											"end": 739,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 708,
											"end": 739,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 739,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 708,
											"end": 739,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 739,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 701,
											"end": 739,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 701,
											"end": 739,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 701,
											"end": 739,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 739,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 701,
											"end": 739,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 701,
											"end": 739,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 701,
											"end": 739,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 701,
											"end": 739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 701,
											"end": 739,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 701,
											"end": 739,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 701,
											"end": 739,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 701,
											"end": 739,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 701,
											"end": 739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 701,
											"end": 739,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 701,
											"end": 739,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 701,
											"end": 739,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 701,
											"end": 739,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 701,
											"end": 739,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 701,
											"end": 739,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 701,
											"end": 739,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 701,
											"end": 739,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 659,
											"end": 746,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 431,
											"end": 653,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 431,
											"end": 653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 470,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 497,
											"end": 571,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 571,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 497,
											"end": 571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 497,
											"end": 571,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 571,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 497,
											"end": 571,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 571,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 497,
											"end": 571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 530,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 530,
											"end": 541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 530,
											"end": 541,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 530,
											"end": 541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 530,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 530,
											"end": 541,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 530,
											"end": 541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 530,
											"end": 541,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 530,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 530,
											"end": 541,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 497,
											"end": 571,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 497,
											"end": 571,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 497,
											"end": 571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 497,
											"end": 571,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 497,
											"end": 571,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 497,
											"end": 571,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 556,
											"end": 561,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 556,
											"end": 561,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 497,
											"end": 571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 497,
											"end": 571,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 497,
											"end": 571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 470,
											"end": 571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 470,
											"end": 571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 622,
											"end": 627,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 582,
											"end": 597,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 582,
											"end": 610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 609,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 598,
											"end": 609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 609,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 598,
											"end": 609,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 598,
											"end": 609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 609,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 598,
											"end": 609,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 598,
											"end": 609,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 582,
											"end": 610,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 582,
											"end": 610,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 582,
											"end": 610,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 582,
											"end": 610,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 582,
											"end": 610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 582,
											"end": 610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 582,
											"end": 610,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 582,
											"end": 610,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 582,
											"end": 610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 582,
											"end": 610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 582,
											"end": 610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 582,
											"end": 610,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 582,
											"end": 610,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 582,
											"end": 610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 610,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 611,
											"end": 618,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 611,
											"end": 618,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 582,
											"end": 619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 582,
											"end": 619,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 582,
											"end": 619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 582,
											"end": 619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 582,
											"end": 619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 582,
											"end": 619,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 582,
											"end": 619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 619,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 627,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 627,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 627,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 582,
											"end": 627,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 582,
											"end": 627,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 582,
											"end": 627,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 582,
											"end": 627,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 582,
											"end": 627,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 637,
											"end": 644,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 637,
											"end": 644,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 637,
											"end": 646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 637,
											"end": 646,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 637,
											"end": 646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 637,
											"end": 646,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 637,
											"end": 646,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 637,
											"end": 646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 637,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 637,
											"end": 646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 637,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 637,
											"end": 646,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 637,
											"end": 646,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 637,
											"end": 646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 637,
											"end": 646,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 637,
											"end": 646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 637,
											"end": 646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 637,
											"end": 646,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 637,
											"end": 646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 460,
											"end": 653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 431,
											"end": 653,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 752,
											"end": 864,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 752,
											"end": 864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 789,
											"end": 807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 789,
											"end": 807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 789,
											"end": 807,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 789,
											"end": 807,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 789,
											"end": 807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 826,
											"end": 841,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 826,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 842,
											"end": 853,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 842,
											"end": 853,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 842,
											"end": 853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 842,
											"end": 853,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 842,
											"end": 853,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 842,
											"end": 853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 842,
											"end": 853,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 842,
											"end": 853,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 842,
											"end": 853,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 826,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 826,
											"end": 854,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 826,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 826,
											"end": 854,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 826,
											"end": 854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 826,
											"end": 854,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 826,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 854,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 826,
											"end": 854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 826,
											"end": 854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 826,
											"end": 854,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 826,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 854,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 826,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 826,
											"end": 854,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 826,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 855,
											"end": 856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 826,
											"end": 857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 826,
											"end": 857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 826,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 826,
											"end": 857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 826,
											"end": 857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 826,
											"end": 857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 826,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 826,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 826,
											"end": 857,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 819,
											"end": 857,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 819,
											"end": 857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 819,
											"end": 857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 819,
											"end": 857,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 819,
											"end": 857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 819,
											"end": 857,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 819,
											"end": 857,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 819,
											"end": 857,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 819,
											"end": 857,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 819,
											"end": 857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 819,
											"end": 857,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 752,
											"end": 864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 752,
											"end": 864,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 139,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 7,
											"end": 139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 100,
											"end": 132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 126,
											"end": 131,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 100,
											"end": 132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 100,
											"end": 132,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 100,
											"end": 132,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 100,
											"end": 132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 95,
											"end": 98,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 88,
											"end": 133,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7,
											"end": 139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 139,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 203,
											"end": 733,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 203,
											"end": 733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 354,
											"end": 358,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 349,
											"end": 352,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 345,
											"end": 359,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 443,
											"end": 447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 432,
											"end": 448,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 426,
											"end": 449,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 462,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 535,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 530,
											"end": 533,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 526,
											"end": 540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 512,
											"end": 524,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 462,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 462,
											"end": 541,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 462,
											"end": 541,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 462,
											"end": 541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 369,
											"end": 551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 634,
											"end": 638,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 632,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 623,
											"end": 639,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 617,
											"end": 640,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 653,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 710,
											"end": 714,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 705,
											"end": 708,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 701,
											"end": 715,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 687,
											"end": 699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 653,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 653,
											"end": 716,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 653,
											"end": 716,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 653,
											"end": 716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 561,
											"end": 726,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 323,
											"end": 733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 203,
											"end": 733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 203,
											"end": 733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 203,
											"end": 733,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 739,
											"end": 847,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 739,
											"end": 847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 816,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 834,
											"end": 839,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 816,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 816,
											"end": 840,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 816,
											"end": 840,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 816,
											"end": 840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 811,
											"end": 814,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 804,
											"end": 841,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 739,
											"end": 847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 739,
											"end": 847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 739,
											"end": 847,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 853,
											"end": 1183,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 853,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1004,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1038,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1027,
											"end": 1036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1173,
											"end": 1174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1171,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1155,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1051,
											"end": 1176,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1051,
											"end": 1176,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1051,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 853,
											"end": 1183,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 853,
											"end": 1183,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 853,
											"end": 1183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 853,
											"end": 1183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 853,
											"end": 1183,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1189,
											"end": 1293,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1189,
											"end": 1293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1241,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1281,
											"end": 1286,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1287,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1293,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1293,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1299,
											"end": 1425,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1299,
											"end": 1425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1336,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1376,
											"end": 1418,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1369,
											"end": 1374,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1365,
											"end": 1419,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1354,
											"end": 1419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1354,
											"end": 1419,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1299,
											"end": 1425,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1299,
											"end": 1425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1299,
											"end": 1425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1299,
											"end": 1425,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1431,
											"end": 1508,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1431,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1497,
											"end": 1502,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1431,
											"end": 1508,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1431,
											"end": 1508,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1431,
											"end": 1508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1431,
											"end": 1508,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1514,
											"end": 1747,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1514,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1556,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1594,
											"end": 1599,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1576,
											"end": 1600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1576,
											"end": 1600,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1576,
											"end": 1600,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1576,
											"end": 1600,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1600,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1688,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1615,
											"end": 1620,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1689,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1609,
											"end": 1712,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1609,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1609,
											"end": 1712,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1692,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1692,
											"end": 1710,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1692,
											"end": 1710,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1692,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1609,
											"end": 1712,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1609,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1740,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1732,
											"end": 1737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1728,
											"end": 1741,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1721,
											"end": 1741,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1721,
											"end": 1741,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1514,
											"end": 1747,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1514,
											"end": 1747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1514,
											"end": 1747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1514,
											"end": 1747,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1753,
											"end": 1933,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1753,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1798,
											"end": 1799,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1791,
											"end": 1879,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1898,
											"end": 1902,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1895,
											"end": 1896,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1888,
											"end": 1903,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1926,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1919,
											"end": 1920,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1927,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addListing()": "5a4ed037",
							"deleteListing()": "45995bdd",
							"test()": "f8a8fd6d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"addListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test\",\"outputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct Test.ListedToken\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test.sol\":\"Test\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"test.sol\":{\"keccak256\":\"0x8eaf2101ac99c666e9aade34f1632747caf1440cb6a1127ca0fce0b827245fc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4eef37b535fce1224b2dd586c090112ffeaeee16d5d943af04c8fa90ecd28e62\",\"dweb:/ipfs/QmceCiaTp7hPTGhFFLJcL4BK6TfpnqNVgUif4bdCqUzcM9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "test.sol:Test",
								"label": "nftContract",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 7,
								"contract": "test.sol:Test",
								"label": "tokenId",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 10,
								"contract": "test.sol:Test",
								"label": "price",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 22,
								"contract": "test.sol:Test",
								"label": "contractToToken",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ListedToken)15_storage))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_struct(ListedToken)15_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => struct Test.ListedToken))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(ListedToken)15_storage)"
							},
							"t_mapping(t_uint256,t_struct(ListedToken)15_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Test.ListedToken)",
								"numberOfBytes": "32",
								"value": "t_struct(ListedToken)15_storage"
							},
							"t_struct(ListedToken)15_storage": {
								"encoding": "inplace",
								"label": "struct Test.ListedToken",
								"members": [
									{
										"astId": 12,
										"contract": "test.sol:Test",
										"label": "seller",
										"offset": 0,
										"slot": "0",
										"type": "t_address_payable"
									},
									{
										"astId": 14,
										"contract": "test.sol:Test",
										"label": "price",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"test.sol": {
				"ast": {
					"absolutePath": "test.sol",
					"exportedSymbols": {
						"Test": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "78:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "Test",
							"nameLocation": "112:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"mutability": "mutable",
									"name": "nftContract",
									"nameLocation": "132:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 77,
									"src": "124:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "124:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307837363034663838644238353233323946413046634245313744373143383434313035633833363836",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "146:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x7604f88dB852329FA0FcBE17D71C844105c83686"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "tokenId",
									"nameLocation": "199:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 77,
									"src": "194:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 5,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "194:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "209:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "price",
									"nameLocation": "221:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 77,
									"src": "216:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "216:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 9,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "229:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "Test.ListedToken",
									"id": 15,
									"members": [
										{
											"constant": false,
											"id": 12,
											"mutability": "mutable",
											"name": "seller",
											"nameLocation": "284:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 15,
											"src": "268:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 11,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "268:15:0",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 14,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "308:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 15,
											"src": "300:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 13,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "300:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ListedToken",
									"nameLocation": "246:11:0",
									"nodeType": "StructDefinition",
									"scope": 77,
									"src": "239:81:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 22,
									"mutability": "mutable",
									"name": "contractToToken",
									"nameLocation": "387:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 77,
									"src": "326:76:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ListedToken_$15_storage_$_$",
										"typeString": "mapping(address => mapping(uint256 => struct Test.ListedToken))"
									},
									"typeName": {
										"id": 21,
										"keyType": {
											"id": 16,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "334:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "326:52:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ListedToken_$15_storage_$_$",
											"typeString": "mapping(address => mapping(uint256 => struct Test.ListedToken))"
										},
										"valueType": {
											"id": 20,
											"keyType": {
												"id": 17,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "353:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "345:31:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ListedToken_$15_storage_$",
												"typeString": "mapping(uint256 => struct Test.ListedToken)"
											},
											"valueType": {
												"id": 19,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 18,
													"name": "ListedToken",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 15,
													"src": "364:11:0"
												},
												"referencedDeclaration": 15,
												"src": "364:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ListedToken_$15_storage_ptr",
													"typeString": "struct Test.ListedToken"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "423:2:0",
										"statements": []
									},
									"id": 26,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "420:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "423:0:0"
									},
									"scope": 77,
									"src": "409:16:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "460:193:0",
										"statements": [
											{
												"assignments": [
													31
												],
												"declarations": [
													{
														"constant": false,
														"id": 31,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "489:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 51,
														"src": "470:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ListedToken_$15_memory_ptr",
															"typeString": "struct Test.ListedToken"
														},
														"typeName": {
															"id": 30,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 29,
																"name": "ListedToken",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 15,
																"src": "470:11:0"
															},
															"referencedDeclaration": 15,
															"src": "470:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ListedToken_$15_storage_ptr",
																"typeString": "struct Test.ListedToken"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 39,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 35,
																	"name": "nftContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4,
																	"src": "530:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "522:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 33,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "522:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "522:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 37,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "556:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 32,
														"name": "ListedToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "497:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ListedToken_$15_storage_ptr_$",
															"typeString": "type(struct Test.ListedToken storage pointer)"
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "497:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ListedToken_$15_memory_ptr",
														"typeString": "struct Test.ListedToken memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "470:101:0"
											},
											{
												"expression": {
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 40,
																"name": "contractToToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "582:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ListedToken_$15_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct Test.ListedToken storage ref))"
																}
															},
															"id": 43,
															"indexExpression": {
																"id": 41,
																"name": "nftContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "598:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "582:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ListedToken_$15_storage_$",
																"typeString": "mapping(uint256 => struct Test.ListedToken storage ref)"
															}
														},
														"id": 44,
														"indexExpression": {
															"id": 42,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "611:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "582:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ListedToken_$15_storage",
															"typeString": "struct Test.ListedToken storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 45,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "622:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ListedToken_$15_memory_ptr",
															"typeString": "struct Test.ListedToken memory"
														}
													},
													"src": "582:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ListedToken_$15_storage",
														"typeString": "struct Test.ListedToken storage ref"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "582:45:0"
											},
											{
												"expression": {
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "637:9:0",
													"subExpression": {
														"id": 48,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "637:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "637:9:0"
											}
										]
									},
									"functionSelector": "5a4ed037",
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addListing",
									"nameLocation": "440:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "450:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "460:0:0"
									},
									"scope": 77,
									"src": "431:222:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "691:55:0",
										"statements": [
											{
												"expression": {
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "701:38:0",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 55,
																"name": "contractToToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "708:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ListedToken_$15_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct Test.ListedToken storage ref))"
																}
															},
															"id": 57,
															"indexExpression": {
																"id": 56,
																"name": "nftContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "724:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "708:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ListedToken_$15_storage_$",
																"typeString": "mapping(uint256 => struct Test.ListedToken storage ref)"
															}
														},
														"id": 59,
														"indexExpression": {
															"hexValue": "30",
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "737:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "708:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ListedToken_$15_storage",
															"typeString": "struct Test.ListedToken storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "701:38:0"
											}
										]
									},
									"functionSelector": "45995bdd",
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deleteListing",
									"nameLocation": "668:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "681:2:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "691:0:0"
									},
									"scope": 77,
									"src": "659:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "809:55:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 69,
															"name": "contractToToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "826:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ListedToken_$15_storage_$_$",
																"typeString": "mapping(address => mapping(uint256 => struct Test.ListedToken storage ref))"
															}
														},
														"id": 71,
														"indexExpression": {
															"id": 70,
															"name": "nftContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "842:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "826:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ListedToken_$15_storage_$",
															"typeString": "mapping(uint256 => struct Test.ListedToken storage ref)"
														}
													},
													"id": 73,
													"indexExpression": {
														"hexValue": "30",
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "855:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "826:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ListedToken_$15_storage",
														"typeString": "struct Test.ListedToken storage ref"
													}
												},
												"functionReturnParameters": 68,
												"id": 74,
												"nodeType": "Return",
												"src": "819:38:0"
											}
										]
									},
									"functionSelector": "f8a8fd6d",
									"id": 76,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "test",
									"nameLocation": "761:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "765:2:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "789:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ListedToken_$15_memory_ptr",
													"typeString": "struct Test.ListedToken"
												},
												"typeName": {
													"id": 66,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 65,
														"name": "ListedToken",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 15,
														"src": "789:11:0"
													},
													"referencedDeclaration": 15,
													"src": "789:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ListedToken_$15_storage_ptr",
														"typeString": "struct Test.ListedToken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:0"
									},
									"scope": 77,
									"src": "752:112:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 78,
							"src": "103:763:0",
							"usedErrors": []
						}
					],
					"src": "78:788:0"
				},
				"id": 0
			}
		}
	}
}