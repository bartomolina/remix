{
	"id": "86cc0f3b13616c12ec0f4b6e40acd525",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"test.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// 0x7604f88dB852329FA0FcBE17D71C844105c83686\npragma solidity ^0.8.7;\n\ncontract Test {\n\n    address nftContract = 0x7604f88dB852329FA0FcBE17D71C844105c83686;\n    uint tokenId = 0;\n    uint price = 100;\n\n    struct ListedToken {\n        address payable seller;\n        uint256 price;\n    }\n\n    mapping(address => mapping(uint256 => ListedToken) ) private contractToToken;\n\n    constructor() {}\n\n    function addListing() public {\n        ListedToken memory token = ListedToken(\n            payable(nftContract),\n            price\n        );\n\n        contractToToken[nftContract][tokenId] = token;\n        tokenId++;\n    }\n\n    function deleteListing() public {\n        delete contractToToken[nftContract][0];\n    }\n\n    function test() public view returns (ListedToken memory) {\n        return contractToToken[nftContract][0];\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"test.sol": {
				"Test": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "addListing",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deleteListing",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "test",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address payable",
											"name": "seller",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										}
									],
									"internalType": "struct Test.ListedToken",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"test.sol\":103:866  contract Test {... */\n  mstore(0x40, 0x80)\n    /* \"test.sol\":146:188  0x7604f88dB852329FA0FcBE17D71C844105c83686 */\n  0x7604f88db852329fa0fcbe17d71c844105c83686\n    /* \"test.sol\":124:188  address nftContract = 0x7604f88dB852329FA0FcBE17D71C844105c83686 */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"test.sol\":209:210  0 */\n  0x00\n    /* \"test.sol\":194:210  uint tokenId = 0 */\n  0x01\n  sstore\n    /* \"test.sol\":229:232  100 */\n  0x64\n    /* \"test.sol\":216:232  uint price = 100 */\n  0x02\n  sstore\n    /* \"test.sol\":409:425  constructor() {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"test.sol\":103:866  contract Test {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"test.sol\":103:866  contract Test {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x45995bdd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x5a4ed037\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf8a8fd6d\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"test.sol\":659:746  function deleteListing() public {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"test.sol\":431:653  function addListing() public {... */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"test.sol\":752:864  function test() public view returns (ListedToken memory) {... */\n    tag_5:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"test.sol\":659:746  function deleteListing() public {... */\n    tag_7:\n        /* \"test.sol\":708:723  contractToToken */\n      0x03\n        /* \"test.sol\":708:736  contractToToken[nftContract] */\n      0x00\n        /* \"test.sol\":724:735  nftContract */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test.sol\":708:736  contractToToken[nftContract] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"test.sol\":708:739  contractToToken[nftContract][0] */\n      0x00\n        /* \"test.sol\":737:738  0 */\n      dup1\n        /* \"test.sol\":708:739  contractToToken[nftContract][0] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"test.sol\":701:739  delete contractToToken[nftContract][0] */\n      dup1\n      dup3\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      pop\n      pop\n        /* \"test.sol\":659:746  function deleteListing() public {... */\n      jump\t// out\n        /* \"test.sol\":431:653  function addListing() public {... */\n    tag_9:\n        /* \"test.sol\":470:494  ListedToken memory token */\n      0x00\n        /* \"test.sol\":497:571  ListedToken(... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"test.sol\":530:541  nftContract */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test.sol\":497:571  ListedToken(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"test.sol\":556:561  price */\n      sload(0x02)\n        /* \"test.sol\":497:571  ListedToken(... */\n      dup2\n      mstore\n      pop\n        /* \"test.sol\":470:571  ListedToken memory token = ListedToken(... */\n      swap1\n      pop\n        /* \"test.sol\":622:627  token */\n      dup1\n        /* \"test.sol\":582:597  contractToToken */\n      0x03\n        /* \"test.sol\":582:610  contractToToken[nftContract] */\n      0x00\n        /* \"test.sol\":598:609  nftContract */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test.sol\":582:610  contractToToken[nftContract] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"test.sol\":582:619  contractToToken[nftContract][tokenId] */\n      0x00\n        /* \"test.sol\":611:618  tokenId */\n      sload(0x01)\n        /* \"test.sol\":582:619  contractToToken[nftContract][tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"test.sol\":582:627  contractToToken[nftContract][tokenId] = token */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"test.sol\":637:644  tokenId */\n      0x01\n      0x00\n        /* \"test.sol\":637:646  tokenId++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_16\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"test.sol\":460:653  {... */\n      pop\n        /* \"test.sol\":431:653  function addListing() public {... */\n      jump\t// out\n        /* \"test.sol\":752:864  function test() public view returns (ListedToken memory) {... */\n    tag_11:\n        /* \"test.sol\":789:807  ListedToken memory */\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n        /* \"test.sol\":826:841  contractToToken */\n      0x03\n        /* \"test.sol\":826:854  contractToToken[nftContract] */\n      0x00\n        /* \"test.sol\":842:853  nftContract */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test.sol\":826:854  contractToToken[nftContract] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"test.sol\":826:857  contractToToken[nftContract][0] */\n      0x00\n        /* \"test.sol\":855:856  0 */\n      dup1\n        /* \"test.sol\":826:857  contractToToken[nftContract][0] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"test.sol\":819:857  return contractToToken[nftContract][0] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"test.sol\":752:864  function test() public view returns (ListedToken memory) {... */\n      swap1\n      jump\t// out\n    tag_19:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_21:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:243   */\n    tag_22:\n        /* \"#utility.yul\":184:191   */\n      0x00\n        /* \"#utility.yul\":213:237   */\n      tag_31\n        /* \"#utility.yul\":231:236   */\n      dup3\n        /* \"#utility.yul\":213:237   */\n      tag_21\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":202:237   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:243   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":249:381   */\n    tag_23:\n        /* \"#utility.yul\":342:374   */\n      tag_33\n        /* \"#utility.yul\":368:373   */\n      dup2\n        /* \"#utility.yul\":342:374   */\n      tag_22\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":337:340   */\n      dup3\n        /* \"#utility.yul\":330:375   */\n      mstore\n        /* \"#utility.yul\":249:381   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":387:464   */\n    tag_24:\n        /* \"#utility.yul\":424:431   */\n      0x00\n        /* \"#utility.yul\":453:458   */\n      dup2\n        /* \"#utility.yul\":442:458   */\n      swap1\n      pop\n        /* \"#utility.yul\":387:464   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":470:578   */\n    tag_25:\n        /* \"#utility.yul\":547:571   */\n      tag_36\n        /* \"#utility.yul\":565:570   */\n      dup2\n        /* \"#utility.yul\":547:571   */\n      tag_24\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":542:545   */\n      dup3\n        /* \"#utility.yul\":535:572   */\n      mstore\n        /* \"#utility.yul\":470:578   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":642:1172   */\n    tag_26:\n        /* \"#utility.yul\":793:797   */\n      0x40\n        /* \"#utility.yul\":788:791   */\n      dup3\n        /* \"#utility.yul\":784:798   */\n      add\n        /* \"#utility.yul\":882:886   */\n      0x00\n        /* \"#utility.yul\":875:880   */\n      dup3\n        /* \"#utility.yul\":871:887   */\n      add\n        /* \"#utility.yul\":865:888   */\n      mload\n        /* \"#utility.yul\":901:980   */\n      tag_38\n        /* \"#utility.yul\":974:978   */\n      0x00\n        /* \"#utility.yul\":969:972   */\n      dup6\n        /* \"#utility.yul\":965:979   */\n      add\n        /* \"#utility.yul\":951:963   */\n      dup3\n        /* \"#utility.yul\":901:980   */\n      tag_23\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":808:990   */\n      pop\n        /* \"#utility.yul\":1073:1077   */\n      0x20\n        /* \"#utility.yul\":1066:1071   */\n      dup3\n        /* \"#utility.yul\":1062:1078   */\n      add\n        /* \"#utility.yul\":1056:1079   */\n      mload\n        /* \"#utility.yul\":1092:1155   */\n      tag_39\n        /* \"#utility.yul\":1149:1153   */\n      0x20\n        /* \"#utility.yul\":1144:1147   */\n      dup6\n        /* \"#utility.yul\":1140:1154   */\n      add\n        /* \"#utility.yul\":1126:1138   */\n      dup3\n        /* \"#utility.yul\":1092:1155   */\n      tag_25\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":1000:1165   */\n      pop\n        /* \"#utility.yul\":762:1172   */\n      pop\n        /* \"#utility.yul\":642:1172   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1178:1508   */\n    tag_13:\n        /* \"#utility.yul\":1325:1329   */\n      0x00\n        /* \"#utility.yul\":1363:1365   */\n      0x40\n        /* \"#utility.yul\":1352:1361   */\n      dup3\n        /* \"#utility.yul\":1348:1366   */\n      add\n        /* \"#utility.yul\":1340:1366   */\n      swap1\n      pop\n        /* \"#utility.yul\":1376:1501   */\n      tag_41\n        /* \"#utility.yul\":1498:1499   */\n      0x00\n        /* \"#utility.yul\":1487:1496   */\n      dup4\n        /* \"#utility.yul\":1483:1500   */\n      add\n        /* \"#utility.yul\":1474:1480   */\n      dup5\n        /* \"#utility.yul\":1376:1501   */\n      tag_26\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":1178:1508   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1514:1694   */\n    tag_27:\n        /* \"#utility.yul\":1562:1639   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1559:1560   */\n      0x00\n        /* \"#utility.yul\":1552:1640   */\n      mstore\n        /* \"#utility.yul\":1659:1663   */\n      0x11\n        /* \"#utility.yul\":1656:1657   */\n      0x04\n        /* \"#utility.yul\":1649:1664   */\n      mstore\n        /* \"#utility.yul\":1683:1687   */\n      0x24\n        /* \"#utility.yul\":1680:1681   */\n      0x00\n        /* \"#utility.yul\":1673:1688   */\n      revert\n        /* \"#utility.yul\":1700:1933   */\n    tag_17:\n        /* \"#utility.yul\":1739:1742   */\n      0x00\n        /* \"#utility.yul\":1762:1786   */\n      tag_44\n        /* \"#utility.yul\":1780:1785   */\n      dup3\n        /* \"#utility.yul\":1762:1786   */\n      tag_24\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":1753:1786   */\n      swap2\n      pop\n        /* \"#utility.yul\":1808:1874   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1801:1806   */\n      dup3\n        /* \"#utility.yul\":1798:1875   */\n      sub\n        /* \"#utility.yul\":1795:1898   */\n      tag_45\n      jumpi\n        /* \"#utility.yul\":1878:1896   */\n      tag_46\n      tag_27\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":1795:1898   */\n    tag_45:\n        /* \"#utility.yul\":1925:1926   */\n      0x01\n        /* \"#utility.yul\":1918:1923   */\n      dup3\n        /* \"#utility.yul\":1914:1927   */\n      add\n        /* \"#utility.yul\":1907:1927   */\n      swap1\n      pop\n        /* \"#utility.yul\":1700:1933   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200d326a3f6bd1cbc83af76f61d06ced4f0b967c67f0e94ccd0af5e4c06e9020fe64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_26": {
									"entryPoint": null,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052737604f88db852329fa0fcbe17d71c844105c836866000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600155606460025534801561006e57600080fd5b506104bb8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806345995bdd146100465780635a4ed03714610050578063f8a8fd6d1461005a575b600080fd5b61004e610078565b005b61005861011d565b005b610062610251565b60405161006f91906103f3565b60405180910390f35b600360008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000808152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090555050565b6000604051806040016040528060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600254815250905080600360008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600154815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155905050600160008154809291906102499061043d565b919050555050565b61025961033a565b600360008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008081526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481525050905090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103958261036a565b9050919050565b6103a58161038a565b82525050565b6000819050919050565b6103be816103ab565b82525050565b6040820160008201516103da600085018261039c565b5060208201516103ed60208501826103b5565b50505050565b600060408201905061040860008301846103c4565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610448826103ab565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361047a5761047961040e565b5b60018201905091905056fea26469706673582212200d326a3f6bd1cbc83af76f61d06ced4f0b967c67f0e94ccd0af5e4c06e9020fe64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0x7604F88DB852329FA0FCBE17D71C844105C83686 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 SSTORE PUSH1 0x64 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BB DUP1 PUSH2 0x7E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x45995BDD EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x5A4ED037 EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF8A8FD6D EQ PUSH2 0x5A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x78 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x11D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x62 PUSH2 0x251 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F SWAP2 SWAP1 PUSH2 0x3F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 SLOAD DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x249 SWAP1 PUSH2 0x43D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST PUSH2 0x259 PUSH2 0x33A JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x395 DUP3 PUSH2 0x36A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A5 DUP2 PUSH2 0x38A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3BE DUP2 PUSH2 0x3AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3DA PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x39C JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3ED PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3B5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x408 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x448 DUP3 PUSH2 0x3AB JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x47A JUMPI PUSH2 0x479 PUSH2 0x40E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD ORIGIN PUSH11 0x3F6BD1CBC83AF76F61D06C 0xED 0x4F SIGNEXTEND SWAP7 PUSH29 0x67F0E94CCD0AF5E4C06E9020FE64736F6C634300081100330000000000 ",
							"sourceMap": "103:763:0:-:0;;;146:42;124:64;;;;;;;;;;;;;;;;;;;;209:1;194:16;;229:3;216:16;;409;;;;;;;;;;103:763;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@addListing_52": {
									"entryPoint": 285,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deleteListing_63": {
									"entryPoint": 120,
									"id": 63,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@test_76": {
									"entryPoint": 593,
									"id": 76,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_payable": {
									"entryPoint": 924,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_ListedToken_$15_memory_ptr_to_t_struct$_ListedToken_$15_memory_ptr_fromStack": {
									"entryPoint": 964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_struct$_ListedToken_$15_memory_ptr__to_t_struct$_ListedToken_$15_memory_ptr__fromStack_reversed": {
									"entryPoint": 1011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 874,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 939,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 1085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1038,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1936:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "192:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "202:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "231:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "213:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "213:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "202:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "174:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "184:7:1",
														"type": ""
													}
												],
												"src": "139:104:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "320:61:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "337:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "368:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "342:25:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "342:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "330:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "330:45:1"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "308:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "315:3:1",
														"type": ""
													}
												],
												"src": "249:132:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "432:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "442:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "453:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "442:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "414:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "424:7:1",
														"type": ""
													}
												],
												"src": "387:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "525:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "542:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "565:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "547:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "547:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "535:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "535:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "535:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "513:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "520:3:1",
														"type": ""
													}
												],
												"src": "470:108:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "762:410:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "772:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "788:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "793:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "784:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "784:14:1"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "776:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "808:182:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "845:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "875:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "882:4:1",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "871:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "871:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "865:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "865:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "849:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "951:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "969:3:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "974:4:1",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "965:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "965:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_payable_to_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "901:49:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "901:79:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "901:79:1"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1000:165:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1036:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1066:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1073:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1062:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1062:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1056:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1056:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "1040:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "1126:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "1144:3:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1149:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1140:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1140:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1092:33:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1092:63:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "1092:63:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ListedToken_$15_memory_ptr_to_t_struct$_ListedToken_$15_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "749:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "756:3:1",
														"type": ""
													}
												],
												"src": "642:530:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1330:178:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1340:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1352:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1363:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1348:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1348:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1340:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1474:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1487:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1498:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1483:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1483:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ListedToken_$15_memory_ptr_to_t_struct$_ListedToken_$15_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1376:97:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1376:125:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1376:125:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ListedToken_$15_memory_ptr__to_t_struct$_ListedToken_$15_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1302:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1314:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1325:4:1",
														"type": ""
													}
												],
												"src": "1178:330:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1542:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1559:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1562:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1552:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1552:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1552:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1656:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1649:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1649:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1649:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1680:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1683:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1673:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1673:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1673:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1514:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1743:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1753:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1780:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1762:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1762:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1753:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1876:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1878:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1878:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1878:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1801:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1808:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1798:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1798:77:1"
															},
															"nodeType": "YulIf",
															"src": "1795:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1907:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1918:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1925:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1914:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1914:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1907:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1729:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1739:3:1",
														"type": ""
													}
												],
												"src": "1700:233:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct Test.ListedToken -> struct Test.ListedToken\n    function abi_encode_t_struct$_ListedToken_$15_memory_ptr_to_t_struct$_ListedToken_$15_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // seller\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_payable_to_t_address_payable(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // price\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_ListedToken_$15_memory_ptr__to_t_struct$_ListedToken_$15_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_struct$_ListedToken_$15_memory_ptr_to_t_struct$_ListedToken_$15_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806345995bdd146100465780635a4ed03714610050578063f8a8fd6d1461005a575b600080fd5b61004e610078565b005b61005861011d565b005b610062610251565b60405161006f91906103f3565b60405180910390f35b600360008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000808152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090555050565b6000604051806040016040528060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600254815250905080600360008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600154815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155905050600160008154809291906102499061043d565b919050555050565b61025961033a565b600360008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008081526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481525050905090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103958261036a565b9050919050565b6103a58161038a565b82525050565b6000819050919050565b6103be816103ab565b82525050565b6040820160008201516103da600085018261039c565b5060208201516103ed60208501826103b5565b50505050565b600060408201905061040860008301846103c4565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610448826103ab565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361047a5761047961040e565b5b60018201905091905056fea26469706673582212200d326a3f6bd1cbc83af76f61d06ced4f0b967c67f0e94ccd0af5e4c06e9020fe64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x45995BDD EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x5A4ED037 EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF8A8FD6D EQ PUSH2 0x5A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x78 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x11D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x62 PUSH2 0x251 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F SWAP2 SWAP1 PUSH2 0x3F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 SLOAD DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x249 SWAP1 PUSH2 0x43D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST PUSH2 0x259 PUSH2 0x33A JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x395 DUP3 PUSH2 0x36A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A5 DUP2 PUSH2 0x38A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3BE DUP2 PUSH2 0x3AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3DA PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x39C JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3ED PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3B5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x408 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x448 DUP3 PUSH2 0x3AB JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x47A JUMPI PUSH2 0x479 PUSH2 0x40E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD ORIGIN PUSH11 0x3F6BD1CBC83AF76F61D06C 0xED 0x4F SIGNEXTEND SWAP7 PUSH29 0x67F0E94CCD0AF5E4C06E9020FE64736F6C634300081100330000000000 ",
							"sourceMap": "103:763:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;659:87;;;:::i;:::-;;431:222;;;:::i;:::-;;752:112;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;659:87;708:15;:28;724:11;;;;;;;;;;;708:28;;;;;;;;;;;;;;;:31;737:1;708:31;;;;;;;;;;;;701:38;;;;;;;;;;;;;;;;;;;;;;;659:87::o;431:222::-;470:24;497:74;;;;;;;;530:11;;;;;;;;;;497:74;;;;;;556:5;;497:74;;;470:101;;622:5;582:15;:28;598:11;;;;;;;;;;;582:28;;;;;;;;;;;;;;;:37;611:7;;582:37;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;637:7;;:9;;;;;;;;;:::i;:::-;;;;;;460:193;431:222::o;752:112::-;789:18;;:::i;:::-;826:15;:28;842:11;;;;;;;;;;;826:28;;;;;;;;;;;;;;;:31;855:1;826:31;;;;;;;;;;;819:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;752:112;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:104::-;184:7;213:24;231:5;213:24;:::i;:::-;202:35;;139:104;;;:::o;249:132::-;342:32;368:5;342:32;:::i;:::-;337:3;330:45;249:132;;:::o;387:77::-;424:7;453:5;442:16;;387:77;;;:::o;470:108::-;547:24;565:5;547:24;:::i;:::-;542:3;535:37;470:108;;:::o;642:530::-;793:4;788:3;784:14;882:4;875:5;871:16;865:23;901:79;974:4;969:3;965:14;951:12;901:79;:::i;:::-;808:182;1073:4;1066:5;1062:16;1056:23;1092:63;1149:4;1144:3;1140:14;1126:12;1092:63;:::i;:::-;1000:165;762:410;642:530;;:::o;1178:330::-;1325:4;1363:2;1352:9;1348:18;1340:26;;1376:125;1498:1;1487:9;1483:17;1474:6;1376:125;:::i;:::-;1178:330;;;;:::o;1514:180::-;1562:77;1559:1;1552:88;1659:4;1656:1;1649:15;1683:4;1680:1;1673:15;1700:233;1739:3;1762:24;1780:5;1762:24;:::i;:::-;1753:33;;1808:66;1801:5;1798:77;1795:103;;1878:18;;:::i;:::-;1795:103;1925:1;1918:5;1914:13;1907:20;;1700:233;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "242200",
								"executionCost": "51660",
								"totalCost": "293860"
							},
							"external": {
								"addListing()": "79629",
								"deleteListing()": "31699",
								"test()": "7293"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 103,
									"end": 866,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 103,
									"end": 866,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 103,
									"end": 866,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 146,
									"end": 188,
									"name": "PUSH",
									"source": 0,
									"value": "7604F88DB852329FA0FCBE17D71C844105C83686"
								},
								{
									"begin": 124,
									"end": 188,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 124,
									"end": 188,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 124,
									"end": 188,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 124,
									"end": 188,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 124,
									"end": 188,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 124,
									"end": 188,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 124,
									"end": 188,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 124,
									"end": 188,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 124,
									"end": 188,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 124,
									"end": 188,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 124,
									"end": 188,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 124,
									"end": 188,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 124,
									"end": 188,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 124,
									"end": 188,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 124,
									"end": 188,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 124,
									"end": 188,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 124,
									"end": 188,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 124,
									"end": 188,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 124,
									"end": 188,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 124,
									"end": 188,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 209,
									"end": 210,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 210,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 210,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 229,
									"end": 232,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 216,
									"end": 232,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 216,
									"end": 232,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 409,
									"end": 425,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 409,
									"end": 425,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 409,
									"end": 425,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 409,
									"end": 425,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 409,
									"end": 425,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 409,
									"end": 425,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 409,
									"end": 425,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 409,
									"end": 425,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 409,
									"end": 425,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 409,
									"end": 425,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 409,
									"end": 425,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 103,
									"end": 866,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 103,
									"end": 866,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 103,
									"end": 866,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 103,
									"end": 866,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 103,
									"end": 866,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 103,
									"end": 866,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 103,
									"end": 866,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200d326a3f6bd1cbc83af76f61d06ced4f0b967c67f0e94ccd0af5e4c06e9020fe64736f6c63430008110033",
									".code": [
										{
											"begin": 103,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 103,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 103,
											"end": 866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 103,
											"end": 866,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 103,
											"end": 866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 103,
											"end": 866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 103,
											"end": 866,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 103,
											"end": 866,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 103,
											"end": 866,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 103,
											"end": 866,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "45995BDD"
										},
										{
											"begin": 103,
											"end": 866,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 103,
											"end": 866,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "5A4ED037"
										},
										{
											"begin": 103,
											"end": 866,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 103,
											"end": 866,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "F8A8FD6D"
										},
										{
											"begin": 103,
											"end": 866,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 103,
											"end": 866,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 103,
											"end": 866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 103,
											"end": 866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 103,
											"end": 866,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 659,
											"end": 746,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 659,
											"end": 746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 659,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 659,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 659,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 659,
											"end": 746,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 659,
											"end": 746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 659,
											"end": 746,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 431,
											"end": 653,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 431,
											"end": 653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 431,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 431,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 431,
											"end": 653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 431,
											"end": 653,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 431,
											"end": 653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 431,
											"end": 653,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 752,
											"end": 864,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 752,
											"end": 864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 752,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 752,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 752,
											"end": 864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 752,
											"end": 864,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 752,
											"end": 864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 752,
											"end": 864,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 752,
											"end": 864,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 752,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 752,
											"end": 864,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 752,
											"end": 864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 752,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 752,
											"end": 864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 752,
											"end": 864,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 752,
											"end": 864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 752,
											"end": 864,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 752,
											"end": 864,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 752,
											"end": 864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 752,
											"end": 864,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 752,
											"end": 864,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 752,
											"end": 864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 752,
											"end": 864,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 659,
											"end": 746,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 659,
											"end": 746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 708,
											"end": 723,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 708,
											"end": 736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 724,
											"end": 735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 724,
											"end": 735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 724,
											"end": 735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 724,
											"end": 735,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 724,
											"end": 735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 724,
											"end": 735,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 724,
											"end": 735,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 724,
											"end": 735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 724,
											"end": 735,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 724,
											"end": 735,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 724,
											"end": 735,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 708,
											"end": 736,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 708,
											"end": 736,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 708,
											"end": 736,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 708,
											"end": 736,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 708,
											"end": 736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 708,
											"end": 736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 708,
											"end": 736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 708,
											"end": 736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 708,
											"end": 736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 708,
											"end": 736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 708,
											"end": 736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 708,
											"end": 736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 708,
											"end": 736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 708,
											"end": 736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 736,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 708,
											"end": 739,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 737,
											"end": 738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 708,
											"end": 739,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 708,
											"end": 739,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 708,
											"end": 739,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 708,
											"end": 739,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 708,
											"end": 739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 708,
											"end": 739,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 708,
											"end": 739,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 708,
											"end": 739,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 708,
											"end": 739,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 708,
											"end": 739,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 739,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 708,
											"end": 739,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 739,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 701,
											"end": 739,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 701,
											"end": 739,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 701,
											"end": 739,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 739,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 701,
											"end": 739,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 701,
											"end": 739,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 701,
											"end": 739,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 701,
											"end": 739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 701,
											"end": 739,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 701,
											"end": 739,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 701,
											"end": 739,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 701,
											"end": 739,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 701,
											"end": 739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 701,
											"end": 739,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 701,
											"end": 739,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 701,
											"end": 739,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 701,
											"end": 739,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 701,
											"end": 739,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 701,
											"end": 739,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 701,
											"end": 739,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 701,
											"end": 739,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 659,
											"end": 746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 431,
											"end": 653,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 431,
											"end": 653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 470,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 497,
											"end": 571,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 571,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 497,
											"end": 571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 497,
											"end": 571,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 571,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 497,
											"end": 571,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 571,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 497,
											"end": 571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 530,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 530,
											"end": 541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 530,
											"end": 541,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 530,
											"end": 541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 530,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 530,
											"end": 541,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 530,
											"end": 541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 530,
											"end": 541,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 530,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 530,
											"end": 541,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 497,
											"end": 571,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 497,
											"end": 571,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 497,
											"end": 571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 497,
											"end": 571,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 497,
											"end": 571,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 497,
											"end": 571,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 556,
											"end": 561,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 556,
											"end": 561,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 497,
											"end": 571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 497,
											"end": 571,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 497,
											"end": 571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 470,
											"end": 571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 470,
											"end": 571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 622,
											"end": 627,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 582,
											"end": 597,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 582,
											"end": 610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 609,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 598,
											"end": 609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 609,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 598,
											"end": 609,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 598,
											"end": 609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 609,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 598,
											"end": 609,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 598,
											"end": 609,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 582,
											"end": 610,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 582,
											"end": 610,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 582,
											"end": 610,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 582,
											"end": 610,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 582,
											"end": 610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 582,
											"end": 610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 582,
											"end": 610,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 582,
											"end": 610,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 582,
											"end": 610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 582,
											"end": 610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 582,
											"end": 610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 582,
											"end": 610,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 582,
											"end": 610,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 582,
											"end": 610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 610,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 611,
											"end": 618,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 611,
											"end": 618,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 582,
											"end": 619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 582,
											"end": 619,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 582,
											"end": 619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 582,
											"end": 619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 582,
											"end": 619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 582,
											"end": 619,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 582,
											"end": 619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 619,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 627,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 627,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 627,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 582,
											"end": 627,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 582,
											"end": 627,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 582,
											"end": 627,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 582,
											"end": 627,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 582,
											"end": 627,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 582,
											"end": 627,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 637,
											"end": 644,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 637,
											"end": 644,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 637,
											"end": 646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 637,
											"end": 646,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 637,
											"end": 646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 637,
											"end": 646,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 637,
											"end": 646,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 637,
											"end": 646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 637,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 637,
											"end": 646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 637,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 637,
											"end": 646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 637,
											"end": 646,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 637,
											"end": 646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 637,
											"end": 646,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 637,
											"end": 646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 637,
											"end": 646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 637,
											"end": 646,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 637,
											"end": 646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 460,
											"end": 653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 431,
											"end": 653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 752,
											"end": 864,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 752,
											"end": 864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 789,
											"end": 807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 789,
											"end": 807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 789,
											"end": 807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 789,
											"end": 807,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 789,
											"end": 807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 826,
											"end": 841,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 826,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 842,
											"end": 853,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 842,
											"end": 853,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 842,
											"end": 853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 842,
											"end": 853,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 842,
											"end": 853,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 842,
											"end": 853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 842,
											"end": 853,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 842,
											"end": 853,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 842,
											"end": 853,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 826,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 826,
											"end": 854,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 826,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 826,
											"end": 854,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 826,
											"end": 854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 826,
											"end": 854,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 826,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 854,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 826,
											"end": 854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 826,
											"end": 854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 826,
											"end": 854,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 826,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 854,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 826,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 826,
											"end": 854,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 826,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 855,
											"end": 856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 826,
											"end": 857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 826,
											"end": 857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 826,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 826,
											"end": 857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 826,
											"end": 857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 826,
											"end": 857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 826,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 826,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 826,
											"end": 857,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 819,
											"end": 857,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 819,
											"end": 857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 819,
											"end": 857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 819,
											"end": 857,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 819,
											"end": 857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 819,
											"end": 857,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 819,
											"end": 857,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 819,
											"end": 857,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 819,
											"end": 857,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 819,
											"end": 857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 819,
											"end": 857,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 819,
											"end": 857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 752,
											"end": 864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 752,
											"end": 864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 243,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 139,
											"end": 243,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 184,
											"end": 191,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 213,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 231,
											"end": 236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 213,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 213,
											"end": 237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 213,
											"end": 237,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 213,
											"end": 237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 202,
											"end": 237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 202,
											"end": 237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 243,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 243,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 243,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 249,
											"end": 381,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 249,
											"end": 381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 342,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 368,
											"end": 373,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 342,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 342,
											"end": 374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 342,
											"end": 374,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 342,
											"end": 374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 337,
											"end": 340,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 375,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 249,
											"end": 381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 249,
											"end": 381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 249,
											"end": 381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 387,
											"end": 464,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 387,
											"end": 464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 424,
											"end": 431,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 453,
											"end": 458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 442,
											"end": 458,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 442,
											"end": 458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 387,
											"end": 464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 387,
											"end": 464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 387,
											"end": 464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 387,
											"end": 464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 470,
											"end": 578,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 470,
											"end": 578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 547,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 565,
											"end": 570,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 547,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 547,
											"end": 571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 547,
											"end": 571,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 547,
											"end": 571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 542,
											"end": 545,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 535,
											"end": 572,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 470,
											"end": 578,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 470,
											"end": 578,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 470,
											"end": 578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 642,
											"end": 1172,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 642,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 793,
											"end": 797,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 788,
											"end": 791,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 784,
											"end": 798,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 882,
											"end": 886,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 875,
											"end": 880,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 871,
											"end": 887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 865,
											"end": 888,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 901,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 974,
											"end": 978,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 969,
											"end": 972,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 965,
											"end": 979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 951,
											"end": 963,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 901,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 901,
											"end": 980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 901,
											"end": 980,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 901,
											"end": 980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 808,
											"end": 990,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1077,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1066,
											"end": 1071,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1062,
											"end": 1078,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1079,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1149,
											"end": 1153,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1144,
											"end": 1147,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1154,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1138,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1092,
											"end": 1155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1155,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1092,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 762,
											"end": 1172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 642,
											"end": 1172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 642,
											"end": 1172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 642,
											"end": 1172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1178,
											"end": 1508,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1178,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 1329,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1363,
											"end": 1365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1361,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1348,
											"end": 1366,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1340,
											"end": 1366,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1340,
											"end": 1366,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1498,
											"end": 1499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1496,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1480,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1376,
											"end": 1501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1501,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1376,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1178,
											"end": 1508,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1178,
											"end": 1508,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1178,
											"end": 1508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1178,
											"end": 1508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1178,
											"end": 1508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1514,
											"end": 1694,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1514,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1562,
											"end": 1639,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1559,
											"end": 1560,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1640,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1659,
											"end": 1663,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1656,
											"end": 1657,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1649,
											"end": 1664,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1683,
											"end": 1687,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1680,
											"end": 1681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1673,
											"end": 1688,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1700,
											"end": 1933,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1700,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1742,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1762,
											"end": 1786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1780,
											"end": 1785,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1762,
											"end": 1786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1762,
											"end": 1786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1762,
											"end": 1786,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1762,
											"end": 1786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1786,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1874,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1801,
											"end": 1806,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 1875,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1795,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1795,
											"end": 1898,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1878,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1878,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1878,
											"end": 1896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1878,
											"end": 1896,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1878,
											"end": 1896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1795,
											"end": 1898,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1795,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 1926,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1918,
											"end": 1923,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1914,
											"end": 1927,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1907,
											"end": 1927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1907,
											"end": 1927,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1700,
											"end": 1933,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1700,
											"end": 1933,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1700,
											"end": 1933,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1700,
											"end": 1933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"test.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addListing()": "5a4ed037",
							"deleteListing()": "45995bdd",
							"test()": "f8a8fd6d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"addListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test\",\"outputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct Test.ListedToken\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test.sol\":\"Test\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"test.sol\":{\"keccak256\":\"0x8eaf2101ac99c666e9aade34f1632747caf1440cb6a1127ca0fce0b827245fc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4eef37b535fce1224b2dd586c090112ffeaeee16d5d943af04c8fa90ecd28e62\",\"dweb:/ipfs/QmceCiaTp7hPTGhFFLJcL4BK6TfpnqNVgUif4bdCqUzcM9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "test.sol:Test",
								"label": "nftContract",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 7,
								"contract": "test.sol:Test",
								"label": "tokenId",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 10,
								"contract": "test.sol:Test",
								"label": "price",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 22,
								"contract": "test.sol:Test",
								"label": "contractToToken",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ListedToken)15_storage))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_struct(ListedToken)15_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => struct Test.ListedToken))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(ListedToken)15_storage)"
							},
							"t_mapping(t_uint256,t_struct(ListedToken)15_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Test.ListedToken)",
								"numberOfBytes": "32",
								"value": "t_struct(ListedToken)15_storage"
							},
							"t_struct(ListedToken)15_storage": {
								"encoding": "inplace",
								"label": "struct Test.ListedToken",
								"members": [
									{
										"astId": 12,
										"contract": "test.sol:Test",
										"label": "seller",
										"offset": 0,
										"slot": "0",
										"type": "t_address_payable"
									},
									{
										"astId": 14,
										"contract": "test.sol:Test",
										"label": "price",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"test.sol": {
				"ast": {
					"absolutePath": "test.sol",
					"exportedSymbols": {
						"Test": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "78:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Test",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "Test",
							"nameLocation": "112:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"mutability": "mutable",
									"name": "nftContract",
									"nameLocation": "132:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 77,
									"src": "124:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "124:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307837363034663838644238353233323946413046634245313744373143383434313035633833363836",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "146:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x7604f88dB852329FA0FcBE17D71C844105c83686"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "tokenId",
									"nameLocation": "199:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 77,
									"src": "194:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 5,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "194:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "209:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "price",
									"nameLocation": "221:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 77,
									"src": "216:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "216:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 9,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "229:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "Test.ListedToken",
									"id": 15,
									"members": [
										{
											"constant": false,
											"id": 12,
											"mutability": "mutable",
											"name": "seller",
											"nameLocation": "284:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 15,
											"src": "268:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 11,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "268:15:0",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 14,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "308:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 15,
											"src": "300:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 13,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "300:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ListedToken",
									"nameLocation": "246:11:0",
									"nodeType": "StructDefinition",
									"scope": 77,
									"src": "239:81:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 22,
									"mutability": "mutable",
									"name": "contractToToken",
									"nameLocation": "387:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 77,
									"src": "326:76:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ListedToken_$15_storage_$_$",
										"typeString": "mapping(address => mapping(uint256 => struct Test.ListedToken))"
									},
									"typeName": {
										"id": 21,
										"keyType": {
											"id": 16,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "334:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "326:52:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ListedToken_$15_storage_$_$",
											"typeString": "mapping(address => mapping(uint256 => struct Test.ListedToken))"
										},
										"valueType": {
											"id": 20,
											"keyType": {
												"id": 17,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "353:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "345:31:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ListedToken_$15_storage_$",
												"typeString": "mapping(uint256 => struct Test.ListedToken)"
											},
											"valueType": {
												"id": 19,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 18,
													"name": "ListedToken",
													"nameLocations": [
														"364:11:0"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 15,
													"src": "364:11:0"
												},
												"referencedDeclaration": 15,
												"src": "364:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ListedToken_$15_storage_ptr",
													"typeString": "struct Test.ListedToken"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "423:2:0",
										"statements": []
									},
									"id": 26,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "420:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "423:0:0"
									},
									"scope": 77,
									"src": "409:16:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "460:193:0",
										"statements": [
											{
												"assignments": [
													31
												],
												"declarations": [
													{
														"constant": false,
														"id": 31,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "489:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 51,
														"src": "470:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ListedToken_$15_memory_ptr",
															"typeString": "struct Test.ListedToken"
														},
														"typeName": {
															"id": 30,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 29,
																"name": "ListedToken",
																"nameLocations": [
																	"470:11:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 15,
																"src": "470:11:0"
															},
															"referencedDeclaration": 15,
															"src": "470:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ListedToken_$15_storage_ptr",
																"typeString": "struct Test.ListedToken"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 39,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 35,
																	"name": "nftContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4,
																	"src": "530:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "522:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 33,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "522:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "522:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 37,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "556:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 32,
														"name": "ListedToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "497:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ListedToken_$15_storage_ptr_$",
															"typeString": "type(struct Test.ListedToken storage pointer)"
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "497:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ListedToken_$15_memory_ptr",
														"typeString": "struct Test.ListedToken memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "470:101:0"
											},
											{
												"expression": {
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 40,
																"name": "contractToToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "582:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ListedToken_$15_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct Test.ListedToken storage ref))"
																}
															},
															"id": 43,
															"indexExpression": {
																"id": 41,
																"name": "nftContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "598:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "582:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ListedToken_$15_storage_$",
																"typeString": "mapping(uint256 => struct Test.ListedToken storage ref)"
															}
														},
														"id": 44,
														"indexExpression": {
															"id": 42,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "611:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "582:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ListedToken_$15_storage",
															"typeString": "struct Test.ListedToken storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 45,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "622:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ListedToken_$15_memory_ptr",
															"typeString": "struct Test.ListedToken memory"
														}
													},
													"src": "582:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ListedToken_$15_storage",
														"typeString": "struct Test.ListedToken storage ref"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "582:45:0"
											},
											{
												"expression": {
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "637:9:0",
													"subExpression": {
														"id": 48,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "637:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "637:9:0"
											}
										]
									},
									"functionSelector": "5a4ed037",
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addListing",
									"nameLocation": "440:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "450:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "460:0:0"
									},
									"scope": 77,
									"src": "431:222:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "691:55:0",
										"statements": [
											{
												"expression": {
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "701:38:0",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 55,
																"name": "contractToToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "708:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ListedToken_$15_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct Test.ListedToken storage ref))"
																}
															},
															"id": 57,
															"indexExpression": {
																"id": 56,
																"name": "nftContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "724:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "708:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ListedToken_$15_storage_$",
																"typeString": "mapping(uint256 => struct Test.ListedToken storage ref)"
															}
														},
														"id": 59,
														"indexExpression": {
															"hexValue": "30",
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "737:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "708:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ListedToken_$15_storage",
															"typeString": "struct Test.ListedToken storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "701:38:0"
											}
										]
									},
									"functionSelector": "45995bdd",
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deleteListing",
									"nameLocation": "668:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "681:2:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "691:0:0"
									},
									"scope": 77,
									"src": "659:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "809:55:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 69,
															"name": "contractToToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "826:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ListedToken_$15_storage_$_$",
																"typeString": "mapping(address => mapping(uint256 => struct Test.ListedToken storage ref))"
															}
														},
														"id": 71,
														"indexExpression": {
															"id": 70,
															"name": "nftContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "842:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "826:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ListedToken_$15_storage_$",
															"typeString": "mapping(uint256 => struct Test.ListedToken storage ref)"
														}
													},
													"id": 73,
													"indexExpression": {
														"hexValue": "30",
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "855:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "826:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ListedToken_$15_storage",
														"typeString": "struct Test.ListedToken storage ref"
													}
												},
												"functionReturnParameters": 68,
												"id": 74,
												"nodeType": "Return",
												"src": "819:38:0"
											}
										]
									},
									"functionSelector": "f8a8fd6d",
									"id": 76,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "test",
									"nameLocation": "761:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "765:2:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "789:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ListedToken_$15_memory_ptr",
													"typeString": "struct Test.ListedToken"
												},
												"typeName": {
													"id": 66,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 65,
														"name": "ListedToken",
														"nameLocations": [
															"789:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 15,
														"src": "789:11:0"
													},
													"referencedDeclaration": 15,
													"src": "789:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ListedToken_$15_storage_ptr",
														"typeString": "struct Test.ListedToken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:0"
									},
									"scope": 77,
									"src": "752:112:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 78,
							"src": "103:763:0",
							"usedErrors": []
						}
					],
					"src": "78:788:0"
				},
				"id": 0
			}
		}
	}
}